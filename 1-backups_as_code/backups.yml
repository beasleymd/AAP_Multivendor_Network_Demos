---
- name: Backup Router Configs to Gitea in Branches
  hosts: "{{ _group }}" 
  gather_facts: false

  tasks:
    - name: Grab Current Time
      ansible.builtin.setup:
      delegate_to: localhost
      run_once: true
  
    - name: Retrieve a repository from a distant location and make it available to the local EE
      ansible.scm.git_retrieve:
        origin:
          url: "http://gitea:{{password}}@ansible-1:3000/gitea/network-demos-repo.git"
        parent_directory: /tmp/
        branch:
          name: "{{ branch_name | default ('ansible-{play_name}') }}-{{ansible_date_time.iso8601_basic_short}}"
          duplicate_detection: no
      register: repository
      delegate_to: localhost
      run_once: true
   
    - name: Network Backup and Resource Manager
      ansible.builtin.include_role:
        name: network.backup.run
      vars:
        ansible_connection: network_cli
        operation: backup
        type: full
        data_store:
          local: "/tmp/network-demos-repo/network_backup_files"

    - name: Publish the changes
      ansible.scm.git_publish:
        path: "{{ repository['path'] }}"
        token: "{{ password }}"
        user:
          name: "{{ username }}"
          email: "{{ email }}"
      delegate_to: localhost
      run_once: true

#Prepare for Intent and Restore
- name: Prepare Branches for Intent and Restore
  hosts: "{{ _group }}"
  gather_facts: False

  tasks:
    - name: Retrieve a repository from a distant location and make it available to the local EE
      ansible.scm.git_retrieve:
        origin:
          url: "http://gitea:{{password}}@ansible-1:3000/gitea/network-demos-repo.git"
        parent_directory: /tmp/
        branch:
          name: "{{ branch_name | default ('ansible-{play_name}') }}-{{ansible_date_time.iso8601_basic_short}}"
          duplicate_detection: no
      register: repository
      delegate_to: localhost
      run_once: true

    - name: List the Branches
      ansible.builtin.shell:
        cmd: "git branch -r"
        chdir: /tmp/network-demos-repo/
      register: branches
      delegate_to: localhost
      run_once: true

    - name: Create a job-template - Network-Git-Intent
      ansible.controller.job_template:
        name: "Network-Git-Intent"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "1-backups_as_code/intended.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"
        diff_mode: true
        survey_enabled: true
        survey_spec:
          name: ""
          description: ""
          spec:
            - question_name: Which Branch would you like to Check Config Drift from?
              type: multiplechoice
              variable: branch_name
              required: true
              default: ""
              choices:
                - "{{ branches.stdout_lines[1] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[2] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[3] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[4] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[5] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[6] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[7] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[8] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[9] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[10] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[11] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[12] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[13] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[14] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[15] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[16] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[17] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[18] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[19] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[20] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[21] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[22] | default('') | replace('  origin/','') }}"
            - question_name: Which Group or Groups to Check Config Drift?
              type: multiselect
              variable: _group
              required: true
              default: ""
              choices:
                - cisco
                - arista
                - juniper
      delegate_to: localhost
      run_once: true
      #ignore_errors: true

    - name: Create a job-template - Network-Git-Restore
      ansible.controller.job_template:
        name: "Network-Git-Restore"
        organization: "Red Hat network organization"
        inventory: "Workshop Inventory"
        project: "Student Project"
        playbook: "1-backups_as_code/restore.yml"
        credentials:
          - "Workshop Credential"
          - "Gitea Credential"
        execution_environment: "Validated Network"
        state: "present"
        survey_enabled: true
        survey_spec:
          name: ""
          description: ""
          spec:
            - question_name: Which Branch would you like to Restore from?
              type: multiplechoice
              variable: branch_name
              required: true
              default: ""
              choices:
                - "{{ branches.stdout_lines[1] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[2] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[3] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[4] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[5] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[6] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[7] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[8] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[9] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[10] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[11] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[12] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[13] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[14] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[15] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[16] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[17] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[18] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[19] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[20] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[21] | default('') | replace('  origin/','') }}"
                - "{{ branches.stdout_lines[22] | default('') | replace('  origin/','') }}"
            - question_name: Which Group or Groups to Rollback?
              type: multiselect
              variable: _group
              required: true
              default: ""
              choices:
                - cisco
                - arista
                - juniper
      delegate_to: localhost
      run_once: true
      #ignore_errors: true
